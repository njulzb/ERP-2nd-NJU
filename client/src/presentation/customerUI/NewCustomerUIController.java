package presentation.customerUI;

import java.io.File;
import java.io.IOException;
import java.rmi.RemoteException;
import java.util.ArrayList;

import BL.customerBL.CustomerController;
import BL.userBL.UserController;
import BLService.customerBLService.CustomerBLService;
import BLService.userBLService.UserBLServiceForNormal;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;

import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.Tooltip;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseDragEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import presentation.littleUI.QiPaoUI;
import presentation.mainUI.UIController;
import presentation.mainUI.UIcaller;
import presentation.userUI.SaleManager.SaleUIController;
import utility.ImageZipUtil;
import utility.LevelOfCustomer;
import utility.RoleOfUser;
import utility.TypeOfCustomer;
import vo.CustomerVO;
import vo.UserVO;
import javafx.scene.control.ChoiceBox;

public class NewCustomerUIController {
	@FXML
	private AnchorPane Apane;
	@FXML
	private ImageView custonerImg;
	@FXML
	private Label addPhotoLabel;
	@FXML
	private Label closeButtonBackground;
	@FXML
	private TextField customerName;
	@FXML
	private TextField receiveLimit;
	@FXML
	private ChoiceBox typeOfCustomer;
	@FXML
	private ChoiceBox levelOfCustomer;
	@FXML
	private ChoiceBox defaultOperator;
	@FXML
	private TextField phone;
	@FXML
	private TextField address;
	@FXML
	private TextField postcode;
	@FXML
	private TextField email;
	@FXML
	private Button confirmButton;
	@FXML
	private Button cancelButton;
	@FXML
	private Button clearButton;
	@FXML
	private Label closeButton;

	private CustomerVO newCustomerVO = new CustomerVO();
	private ArrayList<UserVO> userList = new ArrayList<UserVO>();

	//初始化界面，显示原客户信息
	public void init() throws RemoteException{

		customerName.setText("");
		receiveLimit.setText("");
		typeOfCustomer.setItems(FXCollections.observableArrayList(TypeOfCustomer.exporter,TypeOfCustomer.importer));
		levelOfCustomer.setItems(FXCollections.observableArrayList(LevelOfCustomer.level1,LevelOfCustomer.level2,LevelOfCustomer.level3,LevelOfCustomer.level4,LevelOfCustomer.level5));

		UserBLServiceForNormal userBlService= new UserController();

		userList = userBlService.searchUserByRole(RoleOfUser.saler);
		ArrayList<String> userNameList = new ArrayList<String>();
		for (int i=0;i<userList.size();i++){
			userNameList.add(userList.get(i).getName());
		}
		userList = userBlService.searchUserByRole(RoleOfUser.SaleManager);
		for (int i=0;i<userList.size();i++){
			userNameList.add(userList.get(i).getName());
		}

		ObservableList<String> list = FXCollections.observableList(userNameList);
		defaultOperator.setItems(list);

		typeOfCustomer.setTooltip(new Tooltip("选择客户类型"));
		levelOfCustomer.setTooltip(new Tooltip("选择客户等级"));
		defaultOperator.setTooltip(new Tooltip("选择默认操作员"));

		defaultOperator.getSelectionModel().select(null);
		levelOfCustomer.getSelectionModel().select(null);
		typeOfCustomer.getSelectionModel().select(null);

		Image noneImg = new Image("file:C://temp//default.png");
		custonerImg.setImage(noneImg);
	}

	//新增照片
	// Event Listener on Label[#addPhotoButton].onMouseClicked
	@FXML
	public void addPhoto(MouseEvent event) {
		// TODO Autogenerated

		addPhotoLabel.setTextFill(Color.PURPLE);

		FileChooser fileChooser = new FileChooser();
		fileChooser.setTitle("Open Resource File");
		File file;

		file = fileChooser.showOpenDialog(new Stage());


		String filePath = "null";
		if (file == null) {
			return;
		}
		filePath = file.getAbsolutePath();

		if (filePath!=null) {
			String imgPath = "C://temp//" + filePath.hashCode() + ".png";
			ImageZipUtil.zipWidthHeightImageFile(new File(filePath), new File(imgPath), 80, 80, 1.0f);

			Image imagePush = new Image("file:" + imgPath);
			custonerImg.setImage(imagePush);
			//System.out.println("pres"+imgPath);
			newCustomerVO.setImagePath(imgPath);

		}
	}

	//确认编辑，修改客户信息
	// Event Listener on Button[#confirmButton].onMouseClicked
	@FXML
	public void uploadCustomerInfo(MouseEvent event) throws IOException {
		// TODO Autogenerated
		if (judgenull()){
			QiPaoUI notice = new QiPaoUI();
			notice.showTip(Apane, "客户核心信息不能为空！");
		}else{

			newCustomerVO.setAddress(address.getText());
			newCustomerVO.setEmail(email.getText());
			newCustomerVO.setName(customerName.getText());
			newCustomerVO.setPhoneNumber(phone.getText());
			newCustomerVO.setPostcode(postcode.getText());
			newCustomerVO.setLevel(typeOfCustomer.getSelectionModel().getSelectedItem().toString());
			newCustomerVO.setType(levelOfCustomer.getSelectionModel().getSelectedItem().toString());

			for (int i=0;i<userList.size();i++){
				if (userList.get(i).getName().equals(defaultOperator.getSelectionModel().getSelectedItem().toString())){
					newCustomerVO.setDefaultOperatorid(userList.get(i).getID());
				}
			}
			if (newCustomerVO.getImagePath()==null)
				newCustomerVO.setImagePath("C://temp//default.png");
			CustomerBLService customerBlService= new CustomerController();
			customerBlService.addCustomer(newCustomerVO);

			NewCustomerUI.getStage().hide();
			SaleUIController.getSaleUIController().runNewStage("customerButton");

			QiPaoUI notice = new QiPaoUI();
			notice.showTip((Pane)UIController.getUIController().getUIStage().getScene().getRoot(), "新增成功！");

		}
	}

	private boolean judgenull() {
		// TODO Auto-generated method stub
		if (customerName.getText().equals("") || levelOfCustomer.getSelectionModel().getSelectedItem()==null ||
			typeOfCustomer.getSelectionModel().getSelectedItem()==null || defaultOperator.getSelectionModel().getSelectedItem()==null
			|| receiveLimit.getText().equals(""))
		return true;
		return false;
	}

	// Event Listener on Button[#cancelButton].onMouseClicked
	@FXML
	public void closeStage(MouseEvent event) {
		// TODO Autogenerated
		NewCustomerUI.getStage().hide();
	}

	//增加进出反馈
	// Event Listener on Label[#closeButtonBackground].onMouseEntered
	@FXML
	public void setVisable(MouseDragEvent event) {
		// TODO Autogenerated
		closeButtonBackground.setOpacity(0.61);
	}
	// Event Listener on Label[#closeButtonBackground].onMouseExited
	@FXML
	public void setUnVisable(MouseDragEvent event) {
		// TODO Autogenerated
		closeButtonBackground.setOpacity(0.01);
	}

	//清除输入
	// Event Listener on Button[#cleearButton].onMouseClicked
	@FXML
	public void clearInput(MouseEvent event) {
		// TODO Autogenerated
		address.setText("");
		customerName.setText("");
		phone.setText("");
		email.setText("");
		postcode.setText("");
		defaultOperator.getSelectionModel().select(null);
		levelOfCustomer.getSelectionModel().select(null);
		typeOfCustomer.getSelectionModel().select(null);

		Image noneImg = new Image("file:C://temp//default.png");
		custonerImg.setImage(noneImg);

	}

	//增加进出反馈
	@FXML
	public void enterlabel(MouseEvent event) {
		// TODO Autogenerated
		addPhotoLabel.setTextFill(Color.PURPLE);
		addPhotoLabel.setLayoutX(addPhotoLabel.getLayoutX()+1);
		addPhotoLabel.setLayoutY(addPhotoLabel.getLayoutY()+1);
	}

	@FXML
	public void exitlabel(MouseEvent event) {
		// TODO Autogenerated
		addPhotoLabel.setTextFill(Color.BLACK);
		addPhotoLabel.setLayoutX(addPhotoLabel.getLayoutX()-1);
		addPhotoLabel.setLayoutY(addPhotoLabel.getLayoutY()-1);
	}
}
